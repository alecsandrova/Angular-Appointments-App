// GENERATED FILE! DO NOT EDIT, YOUR CHANGES MAY BE OVERWRITTEN
// Generated by schedder-api/tools/extractor

class ApiResponse {
	error?: string = undefined;
}

/** AccountByEmailAsAdminResponse represents an account from the viewpoint of an admin. Currently it used for AccountByEmailAsAdmin, thus the name. In the future when it will be used for other things it will be renamed. */
export class AccountByEmailAsAdminResponse extends ApiResponse {
	/** AccountID represents the ID of the user. */
	account_id: string = "";
	/** Email represents the email of the user. */
	email?: string = undefined;
	/** Phone represents the phone number of the user. */
	phone?: string = undefined;
	/** IsBusiness represents whether this is a business account. */
	is_business: boolean = false;
	/** IsAdmin represents whether this is an admin account. */
	is_admin: boolean = false;
}

/** AccountCreationRequest represents the parameters that the account creation endpoint expects. */
export class AccountCreationRequest extends ApiResponse {
	/** Email for the newly created account, i.e. user@example.com */
	email?: string = undefined;
	/** Phone number as a string, i.e. "+40743123123" */
	phone?: string = undefined;
	/** The password that the user wants to use */
	password: string = "";
}

/** AccountCreationResponse represents the response that the account creation endpoint returns back. */
export class AccountCreationResponse extends ApiResponse {
	/** AccountID represents the ID of the account just created. */
	account_id: string = "";
	/** Email represents the email the user used to sign up, otherwise it's omitted. */
	email?: string = undefined;
	/** Phone represents the phone the user used to sign up, otherwise it's omitted. */
	phone?: string = undefined;
}

/** AddTenantMemberRequest represents a request to add a member to a tenant. */
export class AddTenantMemberRequest extends ApiResponse {
	/** AccountID represents the ID of the account that should be added. */
	account_id: string = "";
}

/** */
export class AddTenantPhotoResponse extends ApiResponse {
	/** */
	photo_id: string = "";
}

/** AdminSettingRequest represents a request for setting an user's admin property. */
export class AdminSettingRequest extends ApiResponse {
	/** Admin represents the new admin status of the account. */
	admin: boolean = false;
}

/** BusinessSettingRequest represents a request for setting an user's business property. */
export class BusinessSettingRequest extends ApiResponse {
	/** Business represents the new business state of the account. */
	business: boolean = false;
}

/** CreateTenantRequest represents a request for the tenant creation endpoint. */
export class CreateTenantRequest extends ApiResponse {
	/** Name represents the name of the newly created tenant. */
	name: string = "";
}

/** CreateTenantResponse represents the response of the tenant creation endpoint. */
export class CreateTenantResponse extends ApiResponse {
	/** TenantID represents the ID of the newly created tenant. */
	tenant_id: string = "";
}

/** */
export class ListTenantPhotosResponse extends ApiResponse {
	photo_ids: string[] = [];
}

/** PasswordlessTokenGenerationRequest represents the parameters that the passwordless token generation endpoint expects. */
export class PasswordlessTokenGenerationRequest extends ApiResponse {
	/** Phone represents the phone of the user that wants a new session token. */
	phone?: string = undefined;
}

/** SessionsForAccountResponse represents a list of active sessions. */
export class SessionsForAccountResponse extends ApiResponse {
	sessions: sessionResponse[] =[] ;
}

/** TenantMembersResponse represents a response for the tenant member listing endpoint. */
export class TenantMembersResponse extends ApiResponse {
	members: memberResponse[] =[];
}

/** TenantsResponse represents the response of the tenant listing endpoint. */
export class TenantsResponse extends ApiResponse {
	tenants: tenantsResponseEntry[] = [];
}

/** TokenGenerationRequest represents the parameters that the token generation endpoint expects. */
export class TokenGenerationRequest extends ApiResponse {
	/** Email represents the email of the user that wants a new session token. */
	email?: string = undefined;
	/** Phone represents the phone of the user that wants a new session token. */
	phone?: string = undefined;
	/** Password represents the user's password. */
	password: string = "";
	/** Device represents the name of the frontend used, for example "Schedder Flutter Android 6.6" or "Schedder Angular 4.2". */
	device: string = "";
}

/** TokenGenerationResponse represents the response that the token generation endpoint returns back. */
export class TokenGenerationResponse extends ApiResponse {
	/** AccountID represents the ID of the account for which the token was generated. */
	account_id: string = "";
	/** Token represents the token generated, it MUST be used for all endpoints that require authentication. */
	token: string = "";
}

/** VerifyCodeRequest represents a request to verify a code. */
export class VerifyCodeRequest extends ApiResponse {
	/** Email represents the email of the user. */
	email?: string = undefined;
	/** Phone represents the phone number of the user. */
	phone?: string = undefined;
	/** Code represents the code that needs to be verified. */
	code: string = "";
	/** Device represents the device this code was used on. */
	device: string = "";
}

/** VerifyCodeResponse represents the response to the VerifyCode endpoint. */
export class VerifyCodeResponse extends ApiResponse {
	/** Email represents the email of the user. */
	email?: string = undefined;
	/** Phone represents the phone number of the user. */
	phone?: string = undefined;
	/** Scope represents the use of the code, i.e. register, magic login, etc. */
	scope: string = "";
	/** Token represents the returned token for passwordless login. */
	token?: string = undefined;
}

/** WriterVerifier is a Verifier that instead of actually sending the code writes it in the console, or into a file. */
export class WriterVerifier extends ApiResponse {
}

/** memberResponse represents an entry in the tenant member listing endpoint response. */
export class memberResponse extends ApiResponse {
	/** AccountID represents the ID of the member. */
	account_id: string = "";
	/** Name represents the name of the member. */
	name: string = "";
	/** Email represents the email of the member. */
	email?: string = undefined;
	/** Phone represents the phone number of the member. */
	phone?: string = undefined;
	/** IsManager represents whether the member is a manager. */
	is_manager: boolean = false;
}

/** sessionResponse represents a session. */
export class sessionResponse extends ApiResponse {
	/** SessionID is the ID of the session. */
	session_id: string = "";
	/** ExpirationDate is the datetime when the session will expire. */
	expiration_date: string = "";
	/** IP is the IPv4 or IPv6 used for creating the session. */
	ip: string = "";
	/** Device is the device used when creating the session. */
	device: string = "";
}

/** tenantsResponseEntry represents a tenant. */
export class tenantsResponseEntry extends ApiResponse {
	/** TenantID represents the ID of the tenant. */
	tenant_id: string = "";
	/** Name represents the name of the tenant. */
	name: string = "";
}